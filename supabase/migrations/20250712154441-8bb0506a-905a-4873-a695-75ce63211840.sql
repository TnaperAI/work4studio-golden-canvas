-- –°–æ–∑–¥–∞–µ–º enum –¥–ª—è —Ç–∏–ø–æ–≤ –∫–æ–º–ø–∞–Ω–∏–π
CREATE TYPE public.company_type AS ENUM ('ip', 'ooo', 'zao', 'pao', 'other');

-- –°–æ–∑–¥–∞–µ–º enum –¥–ª—è —Å—Ç—Ä–∞–Ω
CREATE TYPE public.country_code AS ENUM ('by', 'ru', 'kz');

-- –°–æ–∑–¥–∞–µ–º enum –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –ª–∏–¥–æ–≤
CREATE TYPE public.lead_status AS ENUM ('new', 'contacted', 'proposal_sent', 'in_negotiation', 'closed_won', 'closed_lost', 'not_interested');

-- –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π
CREATE TABLE public.parsed_companies (
  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,
  company_name TEXT NOT NULL,
  company_type company_type NOT NULL DEFAULT 'ooo',
  registration_number TEXT,
  country country_code NOT NULL,
  region TEXT,
  city TEXT,
  address TEXT,
  registration_date DATE,
  email TEXT,
  phone TEXT,
  website TEXT,
  status lead_status NOT NULL DEFAULT 'new',
  industry TEXT,
  notes TEXT,
  source_url TEXT,
  parsed_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
);

-- –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤ –ø–∏—Å–µ–º
CREATE TABLE public.email_templates (
  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,
  name TEXT NOT NULL,
  subject TEXT NOT NULL,
  content TEXT NOT NULL,
  variables JSONB, -- —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–∏–ø–∞ {company_name}, {industry}
  is_active BOOLEAN NOT NULL DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
);

-- –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞—Å—Å—ã–ª–æ–∫
CREATE TABLE public.email_campaigns (
  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,
  company_id UUID NOT NULL REFERENCES public.parsed_companies(id) ON DELETE CASCADE,
  template_id UUID NOT NULL REFERENCES public.email_templates(id),
  sent_at TIMESTAMP WITH TIME ZONE,
  opened_at TIMESTAMP WITH TIME ZONE,
  clicked_at TIMESTAMP WITH TIME ZONE,
  replied_at TIMESTAMP WITH TIME ZONE,
  status TEXT NOT NULL DEFAULT 'draft', -- draft, sent, delivered, opened, clicked, replied, failed
  error_message TEXT,
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
);

-- –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–∞—Ä—Å–µ—Ä–æ–≤
CREATE TABLE public.parser_configs (
  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,
  country country_code NOT NULL,
  source_name TEXT NOT NULL,
  source_url TEXT NOT NULL,
  is_active BOOLEAN NOT NULL DEFAULT true,
  last_parsed_date DATE,
  parsing_frequency INTEGER DEFAULT 1, -- –¥–Ω–∏
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
);

-- –í–∫–ª—é—á–∞–µ–º RLS
ALTER TABLE public.parsed_companies ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.email_templates ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.email_campaigns ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.parser_configs ENABLE ROW LEVEL SECURITY;

-- –ü–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
CREATE POLICY "Admins can manage parsed companies" ON public.parsed_companies FOR ALL USING (has_role(auth.uid(), 'admin'::app_role));
CREATE POLICY "Editors can view and update parsed companies" ON public.parsed_companies FOR SELECT USING (has_role(auth.uid(), 'editor'::app_role) OR has_role(auth.uid(), 'admin'::app_role));
CREATE POLICY "Editors can update company status" ON public.parsed_companies FOR UPDATE USING (has_role(auth.uid(), 'editor'::app_role) OR has_role(auth.uid(), 'admin'::app_role));

CREATE POLICY "Admins can manage email templates" ON public.email_templates FOR ALL USING (has_role(auth.uid(), 'admin'::app_role));
CREATE POLICY "Editors can view email templates" ON public.email_templates FOR SELECT USING (has_role(auth.uid(), 'editor'::app_role) OR has_role(auth.uid(), 'admin'::app_role));

CREATE POLICY "Admins can manage email campaigns" ON public.email_campaigns FOR ALL USING (has_role(auth.uid(), 'admin'::app_role));
CREATE POLICY "Editors can view email campaigns" ON public.email_campaigns FOR SELECT USING (has_role(auth.uid(), 'editor'::app_role) OR has_role(auth.uid(), 'admin'::app_role));
CREATE POLICY "Editors can create email campaigns" ON public.email_campaigns FOR INSERT WITH CHECK (has_role(auth.uid(), 'editor'::app_role) OR has_role(auth.uid(), 'admin'::app_role));

CREATE POLICY "Admins can manage parser configs" ON public.parser_configs FOR ALL USING (has_role(auth.uid(), 'admin'::app_role));

-- –¢—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è timestamps
CREATE TRIGGER update_parsed_companies_updated_at
  BEFORE UPDATE ON public.parsed_companies
  FOR EACH ROW
  EXECUTE FUNCTION public.update_updated_at_column();

CREATE TRIGGER update_email_templates_updated_at
  BEFORE UPDATE ON public.email_templates
  FOR EACH ROW
  EXECUTE FUNCTION public.update_updated_at_column();

CREATE TRIGGER update_parser_configs_updated_at
  BEFORE UPDATE ON public.parser_configs
  FOR EACH ROW
  EXECUTE FUNCTION public.update_updated_at_column();

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
CREATE INDEX idx_parsed_companies_status ON public.parsed_companies(status);
CREATE INDEX idx_parsed_companies_country ON public.parsed_companies(country);
CREATE INDEX idx_parsed_companies_parsed_at ON public.parsed_companies(parsed_at);
CREATE INDEX idx_email_campaigns_company_id ON public.email_campaigns(company_id);
CREATE INDEX idx_email_campaigns_status ON public.email_campaigns(status);

-- –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
INSERT INTO public.email_templates (name, subject, content, variables) VALUES 
('–ù–æ–≤—ã–π –±–∏–∑–Ω–µ—Å - –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–∞–π—Ç–∞', 
'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –æ—Ç–∫—Ä—ã—Ç–∏–µ–º {company_name}! üéâ', 
'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!

–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π {company_name}! 

–ó–∞–º–µ—Ç–∏–ª, —á—Ç–æ –≤—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–∫—Ä—ã–ª–∏ –±–∏–∑–Ω–µ—Å. –≠—Ç–æ –æ—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—á–∞–ª–æ!

–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –ø–æ–¥ –∫–ª—é—á - –º—ã —Å–¥–µ–ª–∞–µ–º –µ–≥–æ –∑–∞ 5 –¥–Ω–µ–π —Å —É—á—ë—Ç–æ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏ –≤–∞—à–µ–π –Ω–∏—à–∏. –£ –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞.

üîπ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ 5 –¥–Ω–µ–π
üîπ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω
üîπ SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
üîπ –ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –ø–æ–¥ –≤–∞—à—É –Ω–∏—à—É

–•–æ—Ç–µ–ª–∏ –±—ã –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏?

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏', 
'["company_name", "industry"]');

INSERT INTO public.parser_configs (country, source_name, source_url, is_active) VALUES
('by', '–ï–¥–∏–Ω—ã–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä –ë–µ–ª–∞—Ä—É—Å–∏', 'https://egr.gov.by', true),
('ru', '–ï–ì–†–Æ–õ –†–æ—Å—Å–∏–∏', 'https://egrul.nalog.ru', true),
('kz', '–†–µ–≥–∏—Å—Ç—Ä —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞', 'https://stat.gov.kz', true);