import { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { supabase } from '@/integrations/supabase/client';
import { Card, CardContent } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Breadcrumb, BreadcrumbList, BreadcrumbItem, BreadcrumbLink, BreadcrumbPage, BreadcrumbSeparator } from '@/components/ui/breadcrumb';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import BackToTop from '@/components/BackToTop';
import { TeamCarousel } from '@/components/TeamCarousel';
import { useScrollAnimation } from '@/hooks/useScrollAnimation';
import { useSiteContent } from '@/hooks/useSiteContent';
import { useLanguage } from '@/contexts/LanguageContext';
import { Users, Target, Award, Clock, Star, Heart, Zap, Trophy, CheckCircle, ArrowRight, Calendar } from 'lucide-react';
interface TeamMember {
  id: string;
  name: string;
  position: string;
  description: string;
  image: string;
  skills: string[];
  experience: string;
  is_active: boolean;
  sort_order: number;
}
interface CompanyInfo {
  mission: string;
  vision: string;
  founding_year: string;
  team_size: string;
  projects_completed: string;
  clients_served: string;
  description: string;
}
interface PageSEO {
  page_title: string;
  meta_title: string;
  meta_description: string;
  meta_keywords: string;
  h1_tag: string;
  canonical_url: string;
  og_title: string;
  og_description: string;
  og_image: string;
}
const About = () => {
  const [team, setTeam] = useState<TeamMember[]>([]);
  const [companyInfo, setCompanyInfo] = useState<CompanyInfo | null>(null);
  const [pageSEO, setPageSEO] = useState<PageSEO | null>(null);
  const [loading, setLoading] = useState(true);
  const {
    getContent
  } = useSiteContent();
  const {
    language
  } = useLanguage();
  useScrollAnimation();
  useEffect(() => {
    setLoading(true);
    fetchData();
  }, [language]);

  // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (!loading) {
      // –î–∞–µ–º –≤—Ä–µ–º—è DOM –æ–±–Ω–æ–≤–∏—Ç—å—Å—è, –∑–∞—Ç–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
      setTimeout(() => {
        const elements = document.querySelectorAll('.animate-on-scroll');
        elements.forEach(el => {
          el.classList.add('in-view');
        });
      }, 100);
    }
  }, [loading]);

  // –û–±–Ω–æ–≤–ª—è–µ–º SEO —Ç–µ–≥–∏ –∫–æ–≥–¥–∞ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
  useEffect(() => {
    if (pageSEO) {
      // –û–±–Ω–æ–≤–ª—è–µ–º title
      if (pageSEO.page_title) {
        document.title = pageSEO.page_title;
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º meta —Ç–µ–≥–∏
      const updateMetaTag = (name: string, content: string) => {
        if (!content) return;
        let meta = document.querySelector(`meta[name="${name}"]`) as HTMLMetaElement;
        if (!meta) {
          meta = document.createElement('meta');
          meta.name = name;
          document.head.appendChild(meta);
        }
        meta.content = content;
      };
      const updatePropertyTag = (property: string, content: string) => {
        if (!content) return;
        let meta = document.querySelector(`meta[property="${property}"]`) as HTMLMetaElement;
        if (!meta) {
          meta = document.createElement('meta');
          meta.setAttribute('property', property);
          document.head.appendChild(meta);
        }
        meta.content = content;
      };

      // –û–±–Ω–æ–≤–ª—è–µ–º canonical URL
      if (pageSEO.canonical_url) {
        let canonical = document.querySelector('link[rel="canonical"]') as HTMLLinkElement;
        if (!canonical) {
          canonical = document.createElement('link');
          canonical.rel = 'canonical';
          document.head.appendChild(canonical);
        }
        canonical.href = pageSEO.canonical_url;
      }

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ—Ç–∞ —Ç–µ–≥–∏
      updateMetaTag('description', pageSEO.meta_description);
      updateMetaTag('keywords', pageSEO.meta_keywords);
      updatePropertyTag('og:title', pageSEO.og_title);
      updatePropertyTag('og:description', pageSEO.og_description);
      updatePropertyTag('og:image', pageSEO.og_image);
      updatePropertyTag('og:type', 'website');
      updatePropertyTag('og:url', window.location.href);
    }
  }, [pageSEO]);
  const fetchData = async () => {
    try {
      // Fetch team members
      const {
        data: teamData,
        error: teamError
      } = await supabase.from('team_members').select('*').eq('is_active', true).order('sort_order');

      // Fetch company info
      const {
        data: companyData,
        error: companyError
      } = await supabase.from('company_info').select('*').eq('language', language).maybeSingle();

      // Fetch page SEO
      console.log('üîç Fetching About SEO for language:', language);
      const {
        data: seoData,
        error: seoError
      } = await supabase.from('page_seo').select('*').eq('page_slug', 'about').eq('language', language).maybeSingle();
      if (teamError) {
        console.error('Team error:', teamError);
      }
      if (companyError) {
        console.error('Company error:', companyError);
      }
      if (seoError) {
        console.error('‚ùå About SEO error:', seoError);
      }
      setTeam(teamData || []);
      setCompanyInfo(companyData);
      console.log('‚úÖ About SEO data loaded:', seoData);
      setPageSEO(seoData);
    } catch (error) {
      console.error('Error fetching about data:', error);
    } finally {
      setLoading(false);
    }
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ 
  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
      </div>
    );
  }
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –∏–ª–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ fallback
  const company = companyInfo || {
    mission: getContent('about', 'mission_text') || (language === 'en' ? 'We create unique web solutions that help businesses grow and develop in the digital world' : '–°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–µ–±-—Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –±–∏–∑–Ω–µ—Å—É —Ä–∞—Å—Ç–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –º–∏—Ä–µ'),
    vision: getContent('about', 'vision_text') || (language === 'en' ? 'To become a leading web development studio known for innovative solutions and impeccable quality' : '–°—Ç–∞—Ç—å –≤–µ–¥—É—â–µ–π —Å—Ç—É–¥–∏–µ–π –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –∏–∑–≤–µ—Å—Ç–Ω–æ–π –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏ –∏ –±–µ–∑—É–ø—Ä–µ—á–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º'),
    founding_year: '2019',
    team_size: '8+',
    projects_completed: '150+',
    clients_served: '80+',
    description: getContent('about', 'company_description') || (language === 'en' ? 'Work4Studio is a team of professionals specializing in creating modern websites and applications. We combine design creativity with cutting-edge development technologies.' : 'Work4Studio ‚Äî —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏—Ö—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-—Å–∞–π—Ç–æ–≤ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.')
  };
  
  const teamMembers = team.length > 0 ? team : [];
  const stats = [{
    icon: Calendar,
    label: getContent('about', 'stats_founding_year_label') || (language === 'en' ? 'Founded' : '–ì–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è'),
    value: company.founding_year
  }, {
    icon: Users,
    label: getContent('about', 'stats_team_label') || (language === 'en' ? 'Team' : '–ö–æ–º–∞–Ω–¥–∞'),
    value: company.team_size
  }, {
    icon: Trophy,
    label: getContent('about', 'stats_projects_label') || (language === 'en' ? 'Projects Completed' : '–ü—Ä–æ–µ–∫—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ'),
    value: company.projects_completed
  }, {
    icon: Star,
    label: getContent('about', 'stats_clients_label') || (language === 'en' ? 'Happy Clients' : '–î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤'),
    value: company.clients_served
  }];

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
  const values = [{
    icon: Target,
    title: getContent('about', 'value_1_title') || (language === 'en' ? 'Quality' : '–ö–∞—á–µ—Å—Ç–≤–æ'),
    description: getContent('about', 'value_1_description') || (language === 'en' ? 'We never compromise on quality. Every project undergoes strict quality control.' : '–ú—ã –Ω–µ –∏–¥–µ–º –Ω–∞ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å—ã –≤ –≤–æ–ø—Ä–æ—Å–∞—Ö –∫–∞—á–µ—Å—Ç–≤–∞. –ö–∞–∂–¥—ã–π –ø—Ä–æ–µ–∫—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å.')
  }, {
    icon: Zap,
    title: getContent('about', 'value_2_title') || (language === 'en' ? 'Innovation' : '–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏'),
    description: getContent('about', 'value_2_description') || (language === 'en' ? 'We use the most modern technologies and approaches in development.' : '–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º—ã–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –ø–æ–¥—Ö–æ–¥—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.')
  }, {
    icon: Heart,
    title: getContent('about', 'value_3_title') || (language === 'en' ? 'Service' : '–°–µ—Ä–≤–∏—Å'),
    description: getContent('about', 'value_3_description') || (language === 'en' ? 'Your success is our priority. We build long-term relationships.' : '–í–∞—à —É—Å–ø–µ—Ö ‚Äî –Ω–∞—à –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç. –°—Ç—Ä–æ–∏–º –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è.')
  }, {
    icon: CheckCircle,
    title: getContent('about', 'value_4_title') || (language === 'en' ? 'Reliability' : '–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å'),
    description: getContent('about', 'value_4_description') || (language === 'en' ? 'We meet deadlines, keep our word and are always available for support.' : '–°–æ–±–ª—é–¥–∞–µ–º —Å—Ä–æ–∫–∏, –¥–µ—Ä–∂–∏–º —Å–ª–æ–≤–æ –∏ –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏.')
  }];
  return <div className="min-h-screen">{/* –£–±–∏—Ä–∞–µ–º bg-background —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å —Ñ–æ–Ω–æ–≤—É—é –∞–Ω–∏–º–∞—Ü–∏—é */}
      <Header />
      
      {/* Breadcrumb */}
      <section className="pt-24 pb-4 bg-gradient-to-r from-background/95 via-background/98 to-background/95 border-b border-border/50 backdrop-blur-sm">
        <div className="container mx-auto px-4 max-w-7xl">
          <Breadcrumb>
            <BreadcrumbList>
              <BreadcrumbItem>
                <BreadcrumbLink asChild>
                  <Link to="/">{getContent('about', 'breadcrumb_home') || (language === 'en' ? 'Home' : '–ì–ª–∞–≤–Ω–∞—è')}</Link>
                </BreadcrumbLink>
              </BreadcrumbItem>
              <BreadcrumbSeparator />
              <BreadcrumbItem>
                <BreadcrumbPage>{getContent('about', 'breadcrumb_about') || (language === 'en' ? 'About' : '–û –Ω–∞—Å')}</BreadcrumbPage>
              </BreadcrumbItem>
            </BreadcrumbList>
          </Breadcrumb>
        </div>
      </section>

      {/* Hero Section */}
      <section className="relative py-32 overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-background via-background to-primary/5"></div>
        <div className="absolute inset-0">
          <div className="absolute top-20 left-10 w-40 h-40 bg-gradient-to-br from-primary/20 to-transparent rounded-full blur-xl animate-pulse-slow"></div>
          <div className="absolute bottom-20 right-10 w-32 h-32 bg-gradient-to-br from-accent/30 to-transparent rounded-full blur-lg animate-pulse-slow"></div>
          <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-gradient-to-r from-primary/10 to-accent/10 rounded-full blur-3xl"></div>
        </div>
        <div className="container mx-auto px-4 relative z-10">
          <div className="max-w-6xl mx-auto text-center animate-on-scroll">
            <h1 className="text-5xl md:text-7xl lg:text-8xl font-heading font-bold mb-10 leading-tight">
              {getContent('about', 'hero_title_1') && getContent('about', 'hero_title_2') ? <>
                  <span className="bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent">
                    {getContent('about', 'hero_title_1')}
                  </span>
                  <br />
                  <span className="bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent text-glow">
                    {getContent('about', 'hero_title_2')}
                  </span>
                </> : pageSEO && pageSEO.h1_tag ? <span className="bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent text-glow">
                  {pageSEO.h1_tag}
                </span> : <>
                  <span className="bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent">
                    {getContent('about', 'hero_title_1') || '–ù–∞—à–∞'}
                  </span>
                  <br />
                  <span className="bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent text-glow">
                    {getContent('about', 'hero_title_2') || '–∫–æ–º–ø–∞–Ω–∏—è'}
                  </span>
                </>}
            </h1>
            <p className="text-xl md:text-2xl text-muted-foreground mb-16 max-w-4xl mx-auto leading-relaxed">
              {getContent('about', 'company_description') || company.description}
            </p>
          </div>
        </div>
      </section>

      <div className="container-custom section-padding">
        {/* Stats Section */}
        <section className="mb-20 animate-on-scroll">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
            {stats.map((stat, index) => <div key={index} className="bg-card border border-border rounded-3xl p-8 text-center hover:shadow-2xl hover:scale-105 transition-all duration-500 group">
                <div className="w-20 h-20 bg-gradient-to-br from-primary/20 to-accent/20 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300">
                  <stat.icon className="h-10 w-10 text-primary" />
                </div>
                <div className="text-4xl md:text-5xl font-heading font-bold mb-4">
                  <span className="bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent">
                    {stat.value}
                  </span>
                </div>
                <div className="text-muted-foreground font-medium text-lg">{stat.label}</div>
              </div>)}
          </div>
        </section>

        {/* Mission & Vision */}
        <section className="mb-20">
          <div className="grid md:grid-cols-2 gap-8">
            <div className="bg-card border border-border rounded-3xl p-8 md:p-12 hover:shadow-2xl hover:scale-105 transition-all duration-500 animate-on-scroll">
              <div className="flex items-center gap-4 mb-8">
                <div className="w-16 h-16 bg-gradient-to-br from-primary/20 to-primary/30 rounded-2xl flex items-center justify-center">
                  <Target className="h-8 w-8 text-primary" />
                </div>
                <h3 className="text-2xl md:text-3xl font-heading font-bold">
                  <span className="bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent">
                    {getContent('about', 'mission_title') || (language === 'en' ? 'Our Mission' : '–ù–∞—à–∞ –º–∏—Å—Å–∏—è')}
                  </span>
                </h3>
              </div>
              <p className="text-muted-foreground leading-relaxed text-lg">{getContent('about', 'mission_text') || company.mission}</p>
            </div>
            <div className="bg-card border border-border rounded-3xl p-8 md:p-12 hover:shadow-2xl hover:scale-105 transition-all duration-500 animate-on-scroll">
              <div className="flex items-center gap-4 mb-8">
                <div className="w-16 h-16 bg-gradient-to-br from-accent/20 to-accent/30 rounded-2xl flex items-center justify-center">
                  <Award className="h-8 w-8 text-accent" />
                </div>
                <h3 className="text-2xl md:text-3xl font-heading font-bold">
                  <span className="bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent">
                    {getContent('about', 'vision_title') || (language === 'en' ? 'Our Vision' : '–ù–∞—à–µ –≤–∏–¥–µ–Ω–∏–µ')}
                  </span>
                </h3>
              </div>
              <p className="text-muted-foreground leading-relaxed text-lg">{getContent('about', 'vision_text') || company.vision}</p>
            </div>
          </div>
        </section>

        {/* Values */}
        <section className="mb-20">
          <div className="text-center mb-16 animate-on-scroll">
            <h2 className="text-4xl md:text-5xl font-heading font-bold mb-6">
              <span className="bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent">
                {getContent('about', 'values_title') || '–ù–∞—à–∏'}
              </span>
              <br />
              <span className="bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent text-glow">
                {getContent('about', 'values_title_second') || '—Ü–µ–Ω–Ω–æ—Å—Ç–∏'}
              </span>
            </h2>
            <p className="text-xl md:text-2xl text-muted-foreground max-w-3xl mx-auto leading-relaxed">
              {getContent('about', 'values_subtitle') || '–ü—Ä–∏–Ω—Ü–∏–ø—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç –Ω–∞—à—É —Ä–∞–±–æ—Ç—É –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏'}
            </p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {values.map((value, index) => <div key={index} className="bg-card border border-border rounded-3xl p-8 hover:shadow-2xl hover:scale-105 transition-all duration-500 group text-center animate-on-scroll">
                <div className="w-20 h-20 bg-gradient-to-br from-primary/20 to-accent/20 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300">
                  <value.icon className="h-10 w-10 text-primary" />
                </div>
                <h3 className="text-xl font-heading font-bold mb-4">{value.title}</h3>
                <p className="text-muted-foreground leading-relaxed">{value.description}</p>
              </div>)}
          </div>
        </section>

        {/* Team */}
        <section className="mb-20">
          <div className="text-center mb-16 animate-on-scroll">
            <h2 className="text-4xl md:text-5xl font-heading font-bold mb-6 whitespace-nowrap">
              <span className="bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent">
                {getContent('about', 'team_title_first') || '–ù–∞—à–∞'}
              </span>{' '}
              <span className="bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent">
                {getContent('about', 'team_title_second') || '–∫–æ–º–∞–Ω–¥–∞'}
              </span>
            </h2>
            <p className="text-xl md:text-2xl text-muted-foreground max-w-3xl mx-auto leading-relaxed">
              {getContent('about', 'team_subtitle') || '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–ø–ª–æ—â–∞—é—Ç –≤–∞—à–∏ –∏–¥–µ–∏ –≤ –∂–∏–∑–Ω—å'}
            </p>
           </div>
           {teamMembers.length > 0 ? (
             <div className="animate-on-scroll">
               <TeamCarousel members={teamMembers} />
             </div>
           ) : (
             <div className="text-center py-16 animate-on-scroll">
               <p className="text-muted-foreground text-lg">
                 {language === 'en' ? 'Team information will be available soon.' : '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–µ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞.'}
               </p>
             </div>
           )}
        </section>

        {/* CTA Section */}
        <section className="animate-on-scroll">
          <div className="relative bg-card border border-border rounded-3xl p-12 md:p-16 text-center overflow-hidden">
            <div className="absolute inset-0 bg-grid-pattern opacity-5"></div>
            <div className="absolute top-10 left-10 w-32 h-32 bg-gradient-to-br from-primary/20 to-transparent rounded-full blur-xl"></div>
            <div className="absolute bottom-10 right-10 w-24 h-24 bg-gradient-to-br from-accent/30 to-transparent rounded-full blur-lg"></div>
            <div className="relative z-10">
              <h3 className="text-4xl md:text-5xl font-heading font-bold mb-8 leading-tight">
                <span className="bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent">
                  {getContent('about', 'cta_title_first') || '–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å'}
                </span>
                <br />
                <span className="bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent">
                  {getContent('about', 'cta_title_second') || '–ø—Ä–æ–µ–∫—Ç?'}
                </span>
              </h3>
              <p className="text-xl md:text-2xl text-muted-foreground mb-10 max-w-3xl mx-auto leading-relaxed">
                {getContent('about', 'cta_subtitle') || '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. –ú—ã –ø–æ–º–æ–∂–µ–º –≤–æ–ø–ª–æ—Ç–∏—Ç—å –≤–∞—à–∏ –∏–¥–µ–∏ –≤ –∂–∏–∑–Ω—å –∏ —Å–æ–∑–¥–∞—Ç—å —á—Ç–æ-—Ç–æ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ –≤–º–µ—Å—Ç–µ.'}
              </p>
              <Button asChild className="btn-gold text-base md:text-xl px-6 py-3 md:px-8 md:py-4 hover:shadow-2xl hover:scale-105 transition-all duration-300">
                <Link to="/contact">
                  {getContent('about', 'cta_button_text') || '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏'}
                  <ArrowRight className="ml-3 h-5 w-5 md:h-6 md:w-6" />
                </Link>
              </Button>
            </div>
          </div>
        </section>
      </div>

      <Footer />
      <BackToTop />
    </div>;
};
export default About;